"""Add comment to unavailable_dates

Revision ID: a1daaa3bb07b
Revises: 72be0060b370
Create Date: 2025-06-28 08:01:50.837662

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a1daaa3bb07b'
down_revision: Union[str, None] = '72be0060b370'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_apscheduler_jobs_next_run_time', table_name='apscheduler_jobs')
    op.drop_table('apscheduler_jobs')
    op.drop_constraint('bookings_user_id_fkey', 'bookings', type_='foreignkey')
    op.drop_constraint('bookings_property_id_fkey', 'bookings', type_='foreignkey')
    op.create_foreign_key(None, 'bookings', 'users', ['user_id'], ['telegram_id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'bookings', 'properties', ['property_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('price_rules_property_id_fkey', 'price_rules', type_='foreignkey')
    op.create_foreign_key(None, 'price_rules', 'properties', ['property_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('properties_owner_id_fkey', 'properties', type_='foreignkey')
    op.create_foreign_key(None, 'properties', 'users', ['owner_id'], ['telegram_id'], source_schema='public', referent_schema='public')
    op.drop_constraint('property_media_property_id_fkey', 'property_media', type_='foreignkey')
    op.create_foreign_key(None, 'property_media', 'properties', ['property_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('reviews_user_id_fkey', 'reviews', type_='foreignkey')
    op.drop_constraint('reviews_booking_id_fkey', 'reviews', type_='foreignkey')
    op.drop_constraint('reviews_property_id_fkey', 'reviews', type_='foreignkey')
    op.create_foreign_key(None, 'reviews', 'users', ['user_id'], ['telegram_id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'reviews', 'bookings', ['booking_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'reviews', 'properties', ['property_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('unavailable_dates_property_id_fkey', 'unavailable_dates', type_='foreignkey')
    op.create_foreign_key(None, 'unavailable_dates', 'properties', ['property_id'], ['id'], source_schema='public', referent_schema='public')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'unavailable_dates', schema='public', type_='foreignkey')
    op.create_foreign_key('unavailable_dates_property_id_fkey', 'unavailable_dates', 'properties', ['property_id'], ['id'])
    op.drop_constraint(None, 'reviews', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'reviews', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'reviews', schema='public', type_='foreignkey')
    op.create_foreign_key('reviews_property_id_fkey', 'reviews', 'properties', ['property_id'], ['id'])
    op.create_foreign_key('reviews_booking_id_fkey', 'reviews', 'bookings', ['booking_id'], ['id'])
    op.create_foreign_key('reviews_user_id_fkey', 'reviews', 'users', ['user_id'], ['telegram_id'])
    op.drop_constraint(None, 'property_media', schema='public', type_='foreignkey')
    op.create_foreign_key('property_media_property_id_fkey', 'property_media', 'properties', ['property_id'], ['id'])
    op.drop_constraint(None, 'properties', schema='public', type_='foreignkey')
    op.create_foreign_key('properties_owner_id_fkey', 'properties', 'users', ['owner_id'], ['telegram_id'])
    op.drop_constraint(None, 'price_rules', schema='public', type_='foreignkey')
    op.create_foreign_key('price_rules_property_id_fkey', 'price_rules', 'properties', ['property_id'], ['id'])
    op.drop_constraint(None, 'bookings', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'bookings', schema='public', type_='foreignkey')
    op.create_foreign_key('bookings_property_id_fkey', 'bookings', 'properties', ['property_id'], ['id'])
    op.create_foreign_key('bookings_user_id_fkey', 'bookings', 'users', ['user_id'], ['telegram_id'])
    op.create_table('apscheduler_jobs',
    sa.Column('id', sa.VARCHAR(length=191), autoincrement=False, nullable=False),
    sa.Column('next_run_time', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('job_state', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='apscheduler_jobs_pkey')
    )
    op.create_index('ix_apscheduler_jobs_next_run_time', 'apscheduler_jobs', ['next_run_time'], unique=False)
    # ### end Alembic commands ###
