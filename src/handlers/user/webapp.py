import json
from datetime import datetime
from aiogram import F, Router, Bot
from aiogram.types import Message

from src.services.property_service import get_property_with_media_and_owner
from src.services import booking_service
from src.keyboards.inline_keyboards import get_booking_management_keyboard

# –°–æ–∑–¥–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä–æ—É—Ç–µ—Ä —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è Web App
router = Router()

@router.message(F.web_app_data)
async def process_booking_from_webapp(message: Message, bot: Bot):
    """
    –≠—Ç–æ—Ç —Ö–µ–Ω–¥–ª–µ—Ä "–ª–æ–≤–∏—Ç" –¥–∞–Ω–Ω—ã–µ, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –∏–∑ Web App –∫–∞–ª–µ–Ω–¥–∞—Ä—è.
    """
    try:
        data = json.loads(message.web_app_data.data)
        
        property_id = int(data['property_id'])
        checkin_date = datetime.fromisoformat(data['checkin_date'])
        checkout_date = datetime.fromisoformat(data['checkout_date'])
        total_price = data['total_price']

        prop, _, _ = await get_property_with_media_and_owner(property_id)
        if not prop:
            await message.answer("–û—à–∏–±–∫–∞: –æ–±—ä–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return

        if prop.owner.telegram_id == message.from_user.id:
            await message.answer("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç.")
            return

        new_booking = await booking_service.create_booking(
            user_id=message.from_user.id,
            property_id=property_id,
            start_date=checkin_date,
            end_date=checkout_date
        )

        user_info = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        num_nights = (checkout_date - checkin_date).days

        await bot.send_message(
            chat_id=prop.owner.telegram_id,
            text=(
                f"üîî –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ!\n\n"
                f"<b>–û–±—ä–µ–∫—Ç:</b> ¬´{prop.title}¬ª\n"
                f"<b>–î–∞—Ç—ã:</b> —Å {checkin_date.strftime('%d.%m.%Y')} –ø–æ {checkout_date.strftime('%d.%m.%Y')} ({num_nights} –Ω–æ—á–µ–π)\n"
                f"<b>–°—É–º–º–∞:</b> {total_price} —Ä—É–±.\n"
                f"<b>–ì–æ—Å—Ç—å:</b> {user_info}"
            ),
            reply_markup=get_booking_management_keyboard(new_booking.id)
        )
        
        await message.answer("‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤–ª–∞–¥–µ–ª—å—Ü—É. –û–Ω —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è.")

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Web App: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")